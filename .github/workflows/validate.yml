name: Java Package Validation

on:
  push:
    branches: [ "main" ]
  pull_request_target:
    branches: [ "*" ]

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      java_files: ${{ steps.filter.outputs.java }}
      java_files_json: ${{ steps.filter.outputs.java_files }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Find changed Java files
        uses: dorny/paths-filter@v3
        id: filter
        with:
          list-files: json
          filters: |
            java:
              - added|modified: 'src/main/java/**/*.java'

  validate:
    name: Validate Package Names
    needs: changes
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read

    steps:
      - name: Checkout PR code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Run validation
        run: |
          python validate.py \
          --changed-files '${{ needs.changes.outputs.java_files_json }}' \
          --base-package "me.parsa.aas"
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}

      - name: Create PR comment if validation failed
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const errorMessage = fs.existsSync('validation_errors.md') 
              ? fs.readFileSync('validation_errors.md', 'utf8') 
              : 'Package validation failed';
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `‚ùå Package validation failed:\n\n${errorMessage}`
            });